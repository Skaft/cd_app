# Custom button

<CustButton@Button>:
    background_color: 0,0,0,0  # the last zero is the critical on, make invisible
    canvas.before:
        Color:
            rgba: (.5,.5,.5,1) if self.state=='normal' else (0,0,0,1)  # visual feedback of press
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [25,]
	font_size: dp(32)
	
<CustButtonRed@Button>:
    background_color: 0,0,0,0  # the last zero is the critical on, make invisible
    canvas.before:
        Color:
            rgba: (0.40,0,0,1) if self.state=='normal' else (0,0,0,1)  # visual feedback of press
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [25,]
	font_size: dp(32)
	
<CustButtonBlack@Button>:
    background_color: 0,0,0,0  # the last zero is the critical on, make invisible
    canvas.before:
        Color:
            rgba: (0.3,0.3,0.3,1) if self.state=='normal' else (0.1,0.1,0.1,1)  # visual feedback of press
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [25,]
	font_size: dp(32)
	
<CustButtonGreen@Button>:
    background_color: 0,0,0,0  # the last zero is the critical on, make invisible
    canvas.before:
        Color:
            rgba: (0.3,0.35,0.3,1) if self.state=='normal' else (0.1,0.1,0.1,1)  # visual feedback of press
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [25,]
	font_size: dp(32)

   
# Define id so I can refer to the CalcGridLayout
# class functions
# Display points to the entry widget
<CalcGridLayout>:
    id: calculator
    display: entry
    rows: 6
    padding: 10
    spacing: 10
  
      
   
    # Where input is displayed
    BoxLayout:
        TextInput:
            id: entry
            font_size: dp(32)
            multiline: False
   
    # When buttons are pressed update the entry
    BoxLayout:
        spacing: 10
        CustButton:
            text: "7"
            on_press: entry.text += self.text
        CustButton:
            text: "8"
            on_press: entry.text += self.text
        CustButton:
            text: "9"
            on_press: entry.text += self.text
        CustButtonBlack:
            text: "+"
            on_press: entry.text += self.text
   
    BoxLayout:
        spacing: 10
        CustButton:
            text: "4"
            on_press: entry.text += self.text
        CustButton:
            text: "5"
            on_press: entry.text += self.text
        CustButton:
            text: "6"
            on_press: entry.text += self.text
        CustButtonBlack:
            text: "-"
            on_press: entry.text += self.text
   
    BoxLayout:
        spacing: 10
        CustButton:
            text: "1"
            on_press: entry.text += self.text
        CustButton:
            text: "2"
            on_press: entry.text += self.text
        CustButton:
            text: "3"
            on_press: entry.text += self.text
        CustButtonBlack:
            text: "*"
            on_press: entry.text += self.text
   
    # When equals is pressed pass text in the entry
    # to the calculate function
    BoxLayout:
        spacing: 10
        CustButton:
            text: "0"
            on_press: entry.text += self.text
		CustButton:
            text: "."
            on_press: entry.text += self.text
        CustButtonGreen:
            text: "="
            on_press: calculator.calculate(entry.text)
        CustButtonBlack:
            text: "/"
            on_press: entry.text += self.text
			
	BoxLayout:
        spacing: 10
        CustButtonRed:
            text: "AC"
            on_press: entry.text = ""
			
			